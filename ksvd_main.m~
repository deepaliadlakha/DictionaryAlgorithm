function [D,coeff,errors]=ksvd_main(param)

    close all
    rng (0);

    [X, ~] = imread('barbara.png');
    X=single(X);
    X=X/255;

    p=8;

    row_lim=size(X,1);
    col_lim=size(X,2);

    row_lim=row_lim-p+1;
    col_lim=col_lim-p+1;

    data=zeros(p*p,row_lim*col_lim);

    count=1;
    for i=1:row_lim,
        for j=1:col_lim,
           window = X(i:i+p-1,j:j+p-1);
           temp=window(:);
           data(:,count)= temp;
           count=count+1;
        end
    end

    mean_data=mean(data);
    col_mean=mean_data;
    mean_data=repmat(mean_data,size(data,1),1);
    data=data-mean_data;
    var_data=var(data);
    var_data=var_data.*(var_data>0.02); %based on data
    
   
 
 if(param==1)
     
   
    [D,X,errors]=my_ksvd (data(:,logical(var_data)),10,140,100); %Threshold not clear take a clear patch
    save('D.mat','D');
    
 else
    load('D.mat','D');
 end
 
    imagesc (D); colorbar; pause, close
    D_new=ones(size(D,1),size(D,2)+1);
    D_new=D_new/size(D,1);
    D_new(:,2:end)=D;
    
   
    Y_new=zeros(size(data,1),size(data,2));
    Y_new(1,:)=col_mean;
    
    imagesc (D_new); colorbar; pause, close
    
    coeff=sparsecode(D_new,data(:,logical(var_data)));
    
    'sparsecoding done'
    Y_new(:,logical(var_data))=D_new*coeff;
    count=1;
    
    Y=zeros(size(X,1),size(X,2));
    count_Y=zeros(size(X,1),size(X,2));
    all_ones=ones(p,p);
    for i=1:row_lim,
        for j=1:col_lim,
           Y(i:i+p-1,j:j+p-1)=Y(i:i+p-1,j:j+p-1)+reshape(Y_new(:,count),p,p)
           pause
           count_Y(i:i+p-1,j:j+p-1)=count_Y(i:i+p-1,j:j+p-1)+all_ones;
           count=count+1;
           
        end
    end
    
    assert(min(count_Y(:))>0,'pain');
    
    Y=Y/count_Y;
    
    imshow(double(Y)/255);
    pause;
        
    
    
end